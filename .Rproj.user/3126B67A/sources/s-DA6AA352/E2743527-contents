---
title: "expressionviewer"
author: "Victoria Muckerson"
date: "`r Sys.Date()`"
output: rmarkdown::html_vignette
vignette: >
  %\VignetteIndexEntry{Vignette Title}
  %\VignetteEngine{knitr::rmarkdown}
  %\VignetteEncoding{UTF-8}
---
```{r setup, message=FALSE, error=FALSE}
```

# Data preparation

Prepare a SummarizedExperiment, SGFeatureCounts object, or a list composed of
these object classes. 

```{r, message = FALSE}
#Download data
library(celldex)
bluePrintEncode <- celldex::BlueprintEncodeData()
dice <- celldex::DatabaseImmuneCellExpressionData()
hPCA <- celldex::HumanPrimaryCellAtlasData()
mID <- celldex::MonacoImmuneData()

#Make a list of the SummarizedExperiments to display
counts <- list(bluePrintEncode, dice, hPCA, mID)

#Name the list of experiments as they are called in the local environment
names(counts) <- c("bluePrintEncode", "dice", "hPCA", "mID")
```


# UI alterations

If the names of the experiments in a list are not what the app should display
to the user, specify printNames in order to customize how they will appear in
the selection menu.

```{r, message = FALSE}
#Create a list of names to describe each experiment in the app
printNames <- c("Blueprint/ENCODE",
                "Database Immune Cell Expression (DICE)",
                "Human Primary Cell Atlas (HPCA)",
                "Monaco Immune Data (MID)")
```

# App creation

To call the app, the experiment and metaNames need to be specified - all other
parameters are optional. 

```{r, message = FALSE, error=FALSE, warning=FALSE}
#Call function to create shiny app
ExpressionViewer(experiment= counts, metaNames = "label.main",
                 printNames = printNames)
```



